@inject CodeGenStateContainer codeGenStateContainer

<GridRow>
    <Flex Direction="FlexDirection.Vertical" Gap="FlexGap.Middle" Style="width:100%">

        @if (errorMessage != "")
        {
            <Alert Message="@errorMessage" Type="AlertType.Error" />
        }

        <GridRow>
            <h1>Login Page</h1> 
        </GridRow> 
        <GridRow> 
            <Button Type="ButtonType.Primary"
                    OnClick="@GenerateLoginCodeAsync">
                Generate Login Page
            </Button> 
        </GridRow> 
        @if(isLoading == true) 
        { 
            <GridRow> 
                <Spin> 
                </Spin> 
            </GridRow> 
        } 
        else 
        { 
                <Flex Direction="FlexDirection.Vertical" Gap="FlexGap.Small" Style="width:100%"> 
                    <TextArea Rows="13" Style="width:100%"
                @bind-Value="@codeGenStateContainer.CodeForReport.CodeLogin"/>
                <Button Type="ButtonType.Primary" 
                OnClick="@WriteCodeToFile"> 
                    Write Code to File 
                </Button> 
                @if (fileWroteSuccess == true)
                {
                    <Alert Message="Code Updated to File Successfully" Type="AlertType.Success" />
                }
            </Flex> 
        }
    </Flex>
</GridRow>

@code {

    private bool isLoading { get; set; }
    private string errorMessage { get; set; }
    private bool fileWroteSuccess { get; set; }

    protected override void OnInitialized()
    {
        codeGenStateContainer.OnChange += StateHasChanged;

        isLoading = false;
        errorMessage = "";
        fileWroteSuccess = false;
    }

    public void Dispose()
    {
        codeGenStateContainer.OnChange -= StateHasChanged;
    }

    public async Task GenerateLoginCodeAsync()
    {
        try
        {
            isLoading = true;
            errorMessage = "";
            await ApiCaller.GenerateLoginCodeAsync(
                codeGenStateContainer.ReportId);

            var reportCode = (await ApiCaller.GetReportCodeByReportId(codeGenStateContainer.ReportId));
            codeGenStateContainer.CodeForReport.CodeLogin = reportCode.Code.CodeLogin;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    public void WriteCodeToFile()
    {
        try
        {
            isLoading = true;
            errorMessage = "";
            fileWroteSuccess = false;
            string menuItemsFilePath = codeGenStateContainer.CodeRootPath + "/components/pages/login-module.js";
            FileAgent.RewriteFileContent(menuItemsFilePath, codeGenStateContainer.CodeForReport.CodeLogin);
            fileWroteSuccess = true;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

}
